// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AccountsColumns holds the columns for the "accounts" table.
	AccountsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "internal_id", Type: field.TypeInt64, Unique: true},
		{Name: "platform", Type: field.TypeEnum, Enums: []string{"steam"}},
		{Name: "platform_account_id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "profile_url", Type: field.TypeString},
		{Name: "avatar_url", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
	}
	// AccountsTable holds the schema information for the "accounts" table.
	AccountsTable = &schema.Table{
		Name:       "accounts",
		Columns:    AccountsColumns,
		PrimaryKey: []*schema.Column{AccountsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "account_platform_platform_account_id",
				Unique:  true,
				Columns: []*schema.Column{AccountsColumns[2], AccountsColumns[3]},
			},
		},
	}
	// AppsColumns holds the columns for the "apps" table.
	AppsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "internal_id", Type: field.TypeInt64, Unique: true},
		{Name: "source", Type: field.TypeEnum, Enums: []string{"internal", "steam"}},
		{Name: "source_app_id", Type: field.TypeString},
		{Name: "source_url", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"general", "game"}},
		{Name: "short_description", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Size: 2147483647},
		{Name: "image_url", Type: field.TypeString},
		{Name: "release_date", Type: field.TypeString},
		{Name: "developer", Type: field.TypeString},
		{Name: "publisher", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
	}
	// AppsTable holds the schema information for the "apps" table.
	AppsTable = &schema.Table{
		Name:       "apps",
		Columns:    AppsColumns,
		PrimaryKey: []*schema.Column{AppsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "app_source_source_app_id",
				Unique:  true,
				Columns: []*schema.Column{AppsColumns[2], AppsColumns[3]},
			},
		},
	}
	// AppPackagesColumns holds the columns for the "app_packages" table.
	AppPackagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "internal_id", Type: field.TypeInt64, Unique: true},
		{Name: "source", Type: field.TypeEnum, Enums: []string{"manual", "sentinel"}},
		{Name: "source_id", Type: field.TypeInt64},
		{Name: "source_package_id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Size: 2147483647},
		{Name: "binary_name", Type: field.TypeString},
		{Name: "binary_size", Type: field.TypeString},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
	}
	// AppPackagesTable holds the schema information for the "app_packages" table.
	AppPackagesTable = &schema.Table{
		Name:       "app_packages",
		Columns:    AppPackagesColumns,
		PrimaryKey: []*schema.Column{AppPackagesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "apppackage_source_source_id_source_package_id",
				Unique:  true,
				Columns: []*schema.Column{AppPackagesColumns[2], AppPackagesColumns[3], AppPackagesColumns[4]},
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "internal_id", Type: field.TypeInt64, Unique: true},
		{Name: "username", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"active", "blocked"}},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"admin"}},
		{Name: "created_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AccountsTable,
		AppsTable,
		AppPackagesTable,
		UsersTable,
	}
)

func init() {
}
