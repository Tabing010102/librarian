// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package service

import (
	"github.com/tuihub/librarian/app/sephirah/internal/biz/bizangela"
	"github.com/tuihub/librarian/app/sephirah/internal/biz/bizbinah"
	"github.com/tuihub/librarian/app/sephirah/internal/biz/bizchesed"
	"github.com/tuihub/librarian/app/sephirah/internal/biz/bizgebura"
	"github.com/tuihub/librarian/app/sephirah/internal/biz/biznetzach"
	"github.com/tuihub/librarian/app/sephirah/internal/biz/biztiphereth"
	"github.com/tuihub/librarian/app/sephirah/internal/biz/bizyesod"
	"github.com/tuihub/librarian/app/sephirah/internal/client"
	"github.com/tuihub/librarian/app/sephirah/internal/data"
	"github.com/tuihub/librarian/app/sephirah/internal/service"
	"github.com/tuihub/librarian/app/sephirah/internal/supervisor"
	"github.com/tuihub/librarian/internal/conf"
	"github.com/tuihub/librarian/internal/lib/libapp"
	"github.com/tuihub/librarian/internal/lib/libauth"
	"github.com/tuihub/librarian/internal/lib/libcache"
	"github.com/tuihub/librarian/internal/lib/libcron"
	"github.com/tuihub/librarian/internal/lib/libmq"
	"github.com/tuihub/librarian/internal/server"
	"github.com/tuihub/protos/pkg/librarian/mapper/v1"
	v1_3 "github.com/tuihub/protos/pkg/librarian/miner/v1"
	v1_2 "github.com/tuihub/protos/pkg/librarian/searcher/v1"
	v1_4 "github.com/tuihub/protos/pkg/librarian/sephirah/v1"
)

// Injectors from wire.go:

func NewSephirahService(sephirah_Data *conf.Sephirah_Data, auth *libauth.Auth, mq *libmq.MQ, cron *libcron.Cron, store libcache.Store, settings *libapp.Settings, librarianMapperServiceClient v1.LibrarianMapperServiceClient, librarianSearcherServiceClient v1_2.LibrarianSearcherServiceClient, librarianMinerServiceClient v1_3.LibrarianMinerServiceClient) (v1_4.LibrarianSephirahServiceServer, func(), error) {
	entClient, cleanup, err := data.NewSQLClient(sephirah_Data)
	if err != nil {
		return nil, nil, err
	}
	dataData := data.NewData(entClient)
	angelaRepo := data.NewAngelaRepo(dataData)
	librarianPorterServiceClient, err := client.NewPorterClient()
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	porter, err := client.NewPorter(librarianPorterServiceClient)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	supervisorSupervisor := supervisor.NewSupervisor(porter)
	geburaRepo := data.NewGeburaRepo(dataData)
	searcher := client.NewSearcher(librarianSearcherServiceClient)
	angelaBase, err := bizangela.NewAngelaBase(angelaRepo, supervisorSupervisor, geburaRepo, librarianMapperServiceClient, librarianPorterServiceClient, searcher)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	topic := bizangela.NewUpdateAppIndexTopic(angelaBase)
	libmqTopic := bizangela.NewPullSteamAppTopic(angelaBase, topic)
	topic2 := bizangela.NewPullAccountAppRelationTopic(angelaBase, libmqTopic)
	topic3 := bizangela.NewPullAccountTopic(angelaBase, topic2)
	netzachRepo := data.NewNetzachRepo(dataData)
	libcacheMap := bizangela.NewNotifyFlowCache(netzachRepo, store)
	map2 := bizangela.NewFeedToNotifyFlowCache(netzachRepo, store)
	map3 := bizangela.NewNotifyTargetCache(netzachRepo, store)
	topic4 := bizangela.NewNotifyPushTopic(angelaBase, map3)
	topic5 := bizangela.NewNotifyRouterTopic(angelaBase, libcacheMap, map2, topic4)
	topic6 := bizangela.NewParseFeedItemDigestTopic(angelaBase)
	topic7 := bizangela.NewPullFeedTopic(angelaBase, topic5, topic6)
	angela, err := bizangela.NewAngela(mq, topic3, topic2, libmqTopic, topic7, topic5, topic4, topic6, topic)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	tipherethRepo := data.NewTipherethRepo(dataData)
	tiphereth, err := biztiphereth.NewTiphereth(tipherethRepo, auth, supervisorSupervisor, librarianMapperServiceClient, searcher, topic3)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	gebura := bizgebura.NewGebura(geburaRepo, auth, librarianMapperServiceClient, searcher, topic)
	binahRepo, err := data.NewBinahRepo(sephirah_Data)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	controlBlock := bizbinah.NewControlBlock(auth)
	binah := bizbinah.NewBinah(binahRepo, controlBlock, auth, librarianMapperServiceClient, librarianSearcherServiceClient)
	yesodRepo := data.NewYesodRepo(dataData)
	yesod, err := bizyesod.NewYesod(yesodRepo, supervisorSupervisor, cron, librarianMapperServiceClient, searcher, topic7)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	netzach := biznetzach.NewNetzach(netzachRepo, supervisorSupervisor, searcher, map2, libcacheMap, map3)
	chesedRepo := data.NewChesedRepo(dataData)
	map4 := bizchesed.NewImageCache(store)
	chesed, err := bizchesed.NewChesed(chesedRepo, binahRepo, cron, librarianPorterServiceClient, searcher, librarianMinerServiceClient, controlBlock, map4)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	v := server.NewAuthMiddleware(auth)
	librarianSephirahServiceServer := service.NewLibrarianSephirahServiceService(angela, tiphereth, gebura, binah, yesod, netzach, chesed, supervisorSupervisor, settings, auth, v)
	return librarianSephirahServiceServer, func() {
		cleanup()
	}, nil
}
