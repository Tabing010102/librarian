// Code generated by github.com/jmattheis/goverter, DO NOT EDIT.
//go:build !goverter

package converter

import (
	modelgebura "github.com/tuihub/librarian/internal/model/modelgebura"
	sentinel "github.com/tuihub/protos/pkg/librarian/sephirah/v1/sentinel"
)

func ToBizSentinelAppBinary(source *sentinel.SentinelLibraryAppBinary) *modelgebura.SentinelAppBinary {
	var pModelgeburaSentinelAppBinary *modelgebura.SentinelAppBinary
	if source != nil {
		var modelgeburaSentinelAppBinary modelgebura.SentinelAppBinary
		modelgeburaSentinelAppBinary.GeneratedID = (*source).SentinelGeneratedId
		modelgeburaSentinelAppBinary.SizeBytes = (*source).SizeBytes
		modelgeburaSentinelAppBinary.NeedToken = (*source).NeedToken
		if (*source).Files != nil {
			modelgeburaSentinelAppBinary.Files = make([]*modelgebura.SentinelAppBinaryFile, len((*source).Files))
			for i := 0; i < len((*source).Files); i++ {
				modelgeburaSentinelAppBinary.Files[i] = ToBizSentinelAppBinaryFile((*source).Files[i])
			}
		}
		modelgeburaSentinelAppBinary.Name = (*source).Name
		modelgeburaSentinelAppBinary.Version = (*source).Version
		modelgeburaSentinelAppBinary.Developer = (*source).Developer
		modelgeburaSentinelAppBinary.Publisher = (*source).Publisher
		pModelgeburaSentinelAppBinary = &modelgeburaSentinelAppBinary
	}
	return pModelgeburaSentinelAppBinary
}
func ToBizSentinelAppBinaryFile(source *sentinel.SentinelLibraryAppBinaryFile) *modelgebura.SentinelAppBinaryFile {
	var pModelgeburaSentinelAppBinaryFile *modelgebura.SentinelAppBinaryFile
	if source != nil {
		var modelgeburaSentinelAppBinaryFile modelgebura.SentinelAppBinaryFile
		modelgeburaSentinelAppBinaryFile.Name = (*source).Name
		modelgeburaSentinelAppBinaryFile.SizeBytes = (*source).SizeBytes
		if (*source).Sha256 != nil {
			modelgeburaSentinelAppBinaryFile.Sha256 = make([]uint8, len((*source).Sha256))
			for i := 0; i < len((*source).Sha256); i++ {
				modelgeburaSentinelAppBinaryFile.Sha256[i] = (*source).Sha256[i]
			}
		}
		modelgeburaSentinelAppBinaryFile.ServerFilePath = (*source).ServerFilePath
		modelgeburaSentinelAppBinaryFile.ChunksInfo = PtrToString((*source).ChunksInfo)
		pModelgeburaSentinelAppBinaryFile = &modelgeburaSentinelAppBinaryFile
	}
	return pModelgeburaSentinelAppBinaryFile
}
func ToBizSentinelInfo(source *sentinel.ReportSentinelInformationRequest) *modelgebura.SentinelInfo {
	var pModelgeburaSentinelInfo *modelgebura.SentinelInfo
	if source != nil {
		var modelgeburaSentinelInfo modelgebura.SentinelInfo
		modelgeburaSentinelInfo.Url = (*source).Url
		if (*source).UrlAlternatives != nil {
			modelgeburaSentinelInfo.AlternativeUrls = make([]string, len((*source).UrlAlternatives))
			for i := 0; i < len((*source).UrlAlternatives); i++ {
				modelgeburaSentinelInfo.AlternativeUrls[i] = (*source).UrlAlternatives[i]
			}
		}
		modelgeburaSentinelInfo.GetTokenPath = (*source).GetTokenPath
		modelgeburaSentinelInfo.DownloadFileBasePath = (*source).DownloadFileBasePath
		if (*source).Libraries != nil {
			modelgeburaSentinelInfo.Libraries = make([]*modelgebura.SentinelLibrary, len((*source).Libraries))
			for j := 0; j < len((*source).Libraries); j++ {
				modelgeburaSentinelInfo.Libraries[j] = ToBizSentinelLibrary((*source).Libraries[j])
			}
		}
		pModelgeburaSentinelInfo = &modelgeburaSentinelInfo
	}
	return pModelgeburaSentinelInfo
}
func ToBizSentinelLibrary(source *sentinel.SentinelLibrary) *modelgebura.SentinelLibrary {
	var pModelgeburaSentinelLibrary *modelgebura.SentinelLibrary
	if source != nil {
		var modelgeburaSentinelLibrary modelgebura.SentinelLibrary
		modelgeburaSentinelLibrary.ReportedID = (*source).Id
		modelgeburaSentinelLibrary.DownloadBasePath = (*source).DownloadBasePath
		pModelgeburaSentinelLibrary = &modelgeburaSentinelLibrary
	}
	return pModelgeburaSentinelLibrary
}
